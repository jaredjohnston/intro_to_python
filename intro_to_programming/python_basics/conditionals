# Falsy values in Python 
# False
# None
# Null
# empty [], (), {}, set(), range(0), ' '
# numeric zero-values (0, 0.0, 0j)

import random 
randon_number = random,randint(0,1)

if random_number == 1: # random number is 1 the code inside if block is executed (truthy)
  print('Yes!')

else: # when random number is 0 the code inside else block is executed (0 is falsy)
  print('No.')

print('Yes!' if random_number == 1 else "No.") # code above rewritten using a ternary expression

weather = ['sunny', 'rainy', 'snowy']

if weather == 'sunny':
    print("It's a beautiful day!")
elif weather == 'rainy':
    print("Grab an umbrella.")
elif weather == 'snowy':
    print("Better to stay inside.")
else:
   print("Another grey day in the UK")
  
# if-elif-else statement is used conditionally to execute code blocks. 
# The else block must come last if provided and executes if none of the preceding conditions are truthy.

animal = 'horse'

match animal:
    case 'duck':
      print('quack')
    case 'squirrel':
      print('woof')
    case 'horse':
      print('neigh')
    case 'bird':
      print('tweet')
    case _: 
      print('*cricket*')

# prints neight if value of animal is horse

weather = 'sunny'

match weather:
    case 'snowy':
      print('Better to stay inside')
    case 'windy':
      print('Get a windbreaker')
    case 'rainy':
      print('Grab an umbrella')
    case 'sunny':
      print("Go outside, it's a beautiful day")
    case _:
      print("Another grey day in the UK")

if False or True:
   print('Yes')
else:
   print('Noo...')

# will always print 'Yes'. The logical operator 'or' evaluates to a truthy if either of its operands are truthy. True is truthy, therefore evaluates to truthy.

if True and False:
   print('Yes')
else:
   print('No...')

# will always return 'No...'. The logical operator 'and' evaluates to truthy if both of its operands are truthy. False is not truthy, conditional evaluates as a falsy.

sale = True
admission_price = 5.25 if not sale else 3.99

print(f'${admission_price}')

# prints 3.99
# conditional expression that checks value of sale. If False, not Sale is True, and admission_price is assigned value 5.25 and vice-versa.

speed = 0 
acceleration = 24
braking_force = 19
is_moving = braking_force < acceleration and (speed > 0 or acceleration > 0)
print(is_moving)
# braking_force > acceleration is True 
# speed > 0 is False
# acceleration > 0 is True
# True and (False or True). Since False or True evalautes to True, and True and True is True, is_moving is True.
# deleting parantheses would be equivalent to (braking_force < acceleration and speed > 0) or acceleration > 0